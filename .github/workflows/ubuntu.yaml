name: ubuntu
on:
  # Trigger the workflow on push or pull request,
  # but only for the main branch
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  # Also trigger on page_build, as well as release created events
  page_build:
  release:
    types: # This configuration does not affect the page_build event above
      - created
  schedule:
    # * is a special character in YAML so you have to quote this string
    - cron: '0 0,12 * * *'
  workflow_dispatch:

jobs:
  build:
    name: ${{ matrix.os }}-libjstack-build
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04]
        build_type: [Debug, Release]
        include:
          - triplet: x64-linux
            generator: Unix Makefiles
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true

      - name: Start Pg
        shell: bash
        run: sudo systemctl start postgresql.service

      - name: Test Pg
        shell: bash
        run: sudo -u postgres psql -d postgres -c "SELECT 1"

      - name: Create Build Environment
        run: cmake -E make_directory ${{ github.workspace }}/build

      - name: Install dependencies
        shell: bash
        run: sudo apt-get install python3-pip libboost-filesystem-dev libboost-system-dev libboost-test-dev libssl-dev libpq-dev libpqtypes-dev postgresql-server-dev-all libcurl4-openssl-dev

      - name: Configure CMake
        shell: bash
        working-directory: ${{ github.workspace }}/build
        run: cmake -G "${{ matrix.generator }}" -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} -DCMAKE_C_COMPILER="/usr/bin/gcc-10" -DCMAKE_CXX_COMPILER="/usr/bin/g++-10" ${{ github.workspace }}

      - name: Build
        working-directory: ${{ github.workspace }}/build
        shell: bash
        run: cmake --build . --config ${{ matrix.build_type }}

      - name: Add Pg test user
        shell: bash
        run: sudo -u postgres psql -d postgres -c "CREATE USER libjstack WITH PASSWORD 'libjstack'"

      - name: Add Pg test database
        shell: bash
        run: sudo -u postgres psql -d postgres -c "CREATE DATABASE libjstack_test OWNER libjstack"

      - name: Test
        working-directory: ${{ github.workspace }}/build
        shell: bash
        run: ctest -C ${{ matrix.build_type }} -V --extra-verbose --rerun-failed --output-on-failure